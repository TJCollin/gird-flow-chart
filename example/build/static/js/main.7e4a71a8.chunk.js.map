{"version":3,"sources":["FlowNode/FlowNode.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FlowNodeComponent","props","node","text","className","Sider","Layout","Content","App","useState","id","col","row","nodes","setNodes","source","target","lines","setLines","grid","setGrid","layout","labelCol","span","wrapperCol","tailLayout","offset","nodeHeight","nodeWidth","rowHeight","colWidth","margin","x","y","rects","startCol","endCol","startRow","endRow","texts","colStart","colEnd","content","dis","defaultLineStroke","width","color","render","FlowNode","style","background","padding","theme","name","initialValues","remember","onFinish","values","console","log","Item","label","rules","required","message","type","htmlType","Array","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e4a71a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FlowNode } from \"grid-flow-chart-react\";\r\n\r\ninterface FlowNodeComponentProps {\r\n  node: FlowNode;\r\n}\r\n\r\nconst FlowNodeComponent: React.FC<FlowNodeComponentProps> = (props) => {\r\n  const { node } = props;\r\n  return node.text ? <div className=\"my-card\">{node.text}</div> : <></>;\r\n};\r\n\r\nexport default FlowNodeComponent;\r\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport { Layout, InputNumber, Input, Button, Form } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { GridFlowChart, FlowNode, Grid, Line } from \"grid-flow-chart-react\";\nimport \"grid-flow-chart-react/dist/index.css\";\nimport FlowNodeComponent from \"./FlowNode/FlowNode\";\nconst { Sider, Content } = Layout;\n\nfunction App() {\n  const [nodes, setNodes] = useState<FlowNode[]>([\n    {\n      id: 1,\n      col: 0,\n      row: 0,\n      text: \"流程一\",\n    },\n\n    {\n      id: 2,\n      col: 0,\n      row: 1,\n      text: \"流程二\",\n    },\n    {\n      id: 3,\n      col: 1,\n      row: 0,\n      text: \"流程三\",\n    },\n    {\n      id: 4,\n      col: 1,\n      row: 1,\n      text: \"流程四\",\n    },\n    {\n      id: 5,\n      col: 1,\n      row: 2,\n      text: \"流程五\",\n    },\n    {\n      id: 6,\n      col: 2,\n      row: 0,\n      text: \"流程六\",\n    },\n    {\n      id: 7,\n      col: 2,\n      row: 1,\n      text: \"流程七\",\n    },\n    {\n      id: 8,\n      col: 2,\n      row: 2,\n      text: \"流程八\",\n    },\n\n    {\n      id: 13,\n      col: 3,\n      row: 0,\n      text: \"流程九\",\n    },\n    {\n      id: 14,\n      col: 3,\n      row: 1,\n      text: \"流程十\",\n    },\n    {\n      id: 15,\n      col: 3,\n      row: 2,\n      text: \"流程十一\",\n    },\n    {\n      id: 16,\n      col: 3,\n      row: 3,\n      text: \"流程十二\",\n    },\n    {\n      id: 17,\n      col: 3,\n      row: 4,\n      text: \"流程十三\",\n    },\n    {\n      id: 18,\n      col: 4,\n      row: 0,\n      text: \"流程十四\",\n    },\n    {\n      id: 19,\n      col: 4,\n      row: 1,\n      text: \"流程十五\",\n    },\n    {\n      id: 20,\n      col: 4,\n      row: 2,\n      text: \"流程十六\",\n    },\n    {\n      id: 21,\n      col: 5,\n      row: 0,\n      text: \"流程十七\",\n    },\n    {\n      id: 22,\n      col: 5,\n      row: 1,\n      text: \"流程十八\",\n    },\n    {\n      id: 23,\n      col: 5,\n      row: 2,\n      text: \"流程十九\",\n    },\n    {\n      id: 24,\n      col: 5,\n      row: 3,\n      text: \"流程二十\",\n    },\n    {\n      id: 25,\n      col: 6,\n      row: 0,\n      text: \"流程二十一\",\n    },\n    {\n      id: 26,\n      col: 6,\n      row: 1,\n      text: \"流程二十二\",\n    },\n  ]);\n  const [lines, setLines] = useState<Line[]>([\n    {\n      source: 1,\n      target: 2,\n    },\n    {\n      source: 2,\n      target: 3,\n    },\n    {\n      source: 3,\n      target: 4,\n    },\n    {\n      source: 4,\n      target: 5,\n    },\n    {\n      source: 5,\n      target: 6,\n    },\n    {\n      source: 6,\n      target: 7,\n    },\n    {\n      source: 7,\n      target: 8,\n    },\n    {\n      source: 8,\n      target: 13,\n    },\n    {\n      source: 13,\n      target: 14,\n    },\n    {\n      source: 14,\n      target: 15,\n    },\n    {\n      source: 15,\n      target: 16,\n    },\n    {\n      source: 16,\n      target: 18,\n    },\n    {\n      source: 17,\n      target: 18,\n    },\n    {\n      source: 8,\n      target: 15,\n    },\n    {\n      source: 18,\n      target: 19,\n    },\n    {\n      source: 19,\n      target: 20,\n    },\n    {\n      source: 20,\n      target: 21,\n    },\n    {\n      source: 21,\n      target: 22,\n    },\n    {\n      source: 21,\n      target: 23,\n    },\n    {\n      source: 21,\n      target: 24,\n    },\n    {\n      source: 21,\n      target: 25,\n    },\n    {\n      source: 24,\n      target: 25,\n    },\n    {\n      source: 22,\n      target: 25,\n    },\n    {\n      source: 23,\n      target: 25,\n    },\n    {\n      source: 25,\n      target: 26,\n    },\n  ]);\n\n  const [grid, setGrid] = useState<Grid>({\n    row: [1, 2],\n    col: [1, 2, 3, 4, 5, 7],\n  });\n\n  const margin = {\n    x: 20,\n    y: 30,\n  };\n  const texts = [\n    {\n      colStart: 0,\n      colEnd: 1,\n      content: \"阶段一\",\n    },\n    {\n      colStart: 1,\n      colEnd: 2,\n      content: \"阶段二\",\n    },\n    {\n      colStart: 2,\n      colEnd: 3,\n      content: \"阶段三\",\n    },\n    {\n      colStart: 3,\n      colEnd: 4,\n      content: \"阶段四\",\n    },\n    {\n      colStart: 4,\n      colEnd: 5,\n      content: \"阶段五\",\n    },\n    {\n      colStart: 5,\n      colEnd: 7,\n      content: \"阶段六\",\n    },\n  ];\n  const rects = [\n    {\n      startCol: 0,\n      endCol: 0.95,\n      startRow: 0,\n      endRow: 2,\n    },\n    {\n      startCol: 1,\n      endCol: 1.95,\n      startRow: 0,\n      endRow: 3,\n    },\n  ];\n  const lineStroke = {\n    width: 2,\n    color: \"#1976D2\",\n  };\n\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n    setNodes([...nodes, { ...values }]);\n  };\n  const onLineFinish = (values: any) => {\n    console.log(\"Success:\", values);\n    setLines([...lines, { ...values }]);\n  };\n  const onGridFinish = (values: any) => {\n    console.log(\"Success:\", values);\n    const row =\n      grid.row && grid.row instanceof Array\n        ? [...grid.row, values.row]\n        : [...values.row];\n    const col =\n      grid.col && grid.col instanceof Array\n        ? [...grid.col, values.row]\n        : [...values.row];\n    setGrid({ row: row, col: col });\n  };\n\n  return (\n    <Layout>\n      <Content>\n        <div className=\"App\">\n          <div className=\"flow-demo\">\n            <GridFlowChart\n              nodeHeight={60}\n              nodeWidth={110}\n              rowHeight={95}\n              colWidth={150}\n              nodes={nodes}\n              lines={lines}\n              margin={margin}\n              grid={grid}\n              rects={rects}\n              texts={texts}\n              dis={15}\n              defaultLineStroke={lineStroke}\n              render={(node) => (\n                <FlowNodeComponent node={node}></FlowNodeComponent>\n              )}\n            ></GridFlowChart>\n          </div>\n        </div>\n      </Content>\n      <Sider\n        style={{ background: \"#f0f2f5\", padding: \"20px\" }}\n        width=\"300\"\n        theme=\"light\"\n      >\n        <div className=\"section\">\n          <p>new node：</p>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Form.Item\n              label=\"id\"\n              name=\"id\"\n              rules={[{ required: true, message: \"Please input ID\" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"text\"\n              name=\"text\"\n              rules={[{ required: true, message: \"Please input text\" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"col\"\n              name=\"col\"\n              rules={[{ required: true, message: \"Please input row\" }]}\n            >\n              <InputNumber type=\"number\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"row\"\n              name=\"row\"\n              rules={[{ required: true, message: \"Please input column\" }]}\n            >\n              <InputNumber type=\"number\" />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n        <div className=\"section\">\n          <p>new line：</p>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onLineFinish}\n          >\n            <Form.Item\n              label=\"source\"\n              name=\"source\"\n              rules={[{ required: true, message: \"Please input row\" }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"target\"\n              name=\"target\"\n              rules={[{ required: true, message: \"Please input column\" }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n        <div className=\"section\">\n          <p>new grid：</p>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onGridFinish}\n          >\n            <Form.Item label=\"col\" name=\"col\">\n              <InputNumber type=\"number\" />\n            </Form.Item>\n\n            <Form.Item label=\"row\" name=\"row\">\n              <InputNumber type=\"number\" />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Sider>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}