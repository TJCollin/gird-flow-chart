(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[957],{222:function(e,t,r){"use strict";r.r(t),r.d(t,{data:function(){return l}});const l={key:"v-46f91602",path:"/en/guide/api.html",title:"API",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Properties",slug:"properties",children:[{level:3,title:"nodes",slug:"nodes",children:[]},{level:3,title:"lines",slug:"lines",children:[]},{level:3,title:"hoverLineColor",slug:"hoverlinecolor",children:[]},{level:3,title:"defaultLineStroke",slug:"defaultlinestroke",children:[]},{level:3,title:"colWidth",slug:"colwidth",children:[]},{level:3,title:"rowHeight",slug:"rowheight",children:[]},{level:3,title:"nodeWidth",slug:"nodewidth",children:[]},{level:3,title:"nodeHeight",slug:"nodeheight",children:[]},{level:3,title:"margin",slug:"margin",children:[]},{level:3,title:"grid",slug:"grid",children:[]},{level:3,title:"defaultGridStroke",slug:"defaultgridstroke",children:[]},{level:3,title:"rects",slug:"rects",children:[]},{level:3,title:"defaultRectStroke",slug:"defaultrectstroke",children:[]},{level:3,title:"texts",slug:"texts",children:[]},{level:3,title:"defaultTextFont",slug:"defaulttextfont",children:[]},{level:3,title:"dis",slug:"dis",children:[]},{level:3,title:"render",slug:"render",children:[]}]}],filePathRelative:"en/guide/api.md",git:{updatedTime:null,contributors:[]}}},8489:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return o}});const l=(0,r(6252).uE)('<h1 id="api"><a class="header-anchor" href="#api">#</a> API</h1><p>If you want to understand GridFlowChart thoroughly, you need to understand the common properties of its instances.</p><h2 id="properties"><a class="header-anchor" href="#properties">#</a> Properties</h2><p>Sometimes we want to do some extensions based on BetterScroll, we need to understand some of the properties of BetterScroll. Here are a few common properties.</p><h3 id="nodes"><a class="header-anchor" href="#nodes">#</a> nodes</h3><ul><li><strong>Type</strong>: <code>FlowNode[]</code>.</li><li><strong>Usage</strong>: nodes of flow chart .</li></ul><h3 id="lines"><a class="header-anchor" href="#lines">#</a> lines</h3><ul><li><strong>Type</strong>: <code>Line[]</code>.</li><li><strong>Usage</strong>: lines between nodes.</li></ul><h3 id="hoverlinecolor"><a class="header-anchor" href="#hoverlinecolor">#</a> hoverLineColor</h3><ul><li><strong>Type</strong>: <code>string</code></li><li><strong>Usage</strong>: determine the color when line hovered.</li></ul><h3 id="defaultlinestroke"><a class="header-anchor" href="#defaultlinestroke">#</a> defaultLineStroke</h3><ul><li><strong>Type</strong>: <code>StrokeData</code></li><li><strong>Usage</strong>: default line stroke.</li></ul><h3 id="colwidth"><a class="header-anchor" href="#colwidth">#</a> colWidth</h3><ul><li><strong>Type</strong>: <code>number</code></li><li><strong>Usage</strong>: width of the grid.</li></ul><h3 id="rowheight"><a class="header-anchor" href="#rowheight">#</a> rowHeight</h3><ul><li><strong>Type</strong>: <code>number</code></li><li><strong>Usage</strong>: height of the grid.</li></ul><h3 id="nodewidth"><a class="header-anchor" href="#nodewidth">#</a> nodeWidth</h3><ul><li><strong>Type</strong>: <code>number</code></li><li><strong>Usage</strong>: width of the node.</li></ul><h3 id="nodeheight"><a class="header-anchor" href="#nodeheight">#</a> nodeHeight</h3><ul><li><strong>Type</strong>: <code>number</code></li><li><strong>Usage</strong>: height of the node.</li></ul><h3 id="margin"><a class="header-anchor" href="#margin">#</a> margin</h3><ul><li><strong>Type</strong>: <code>NodeMargin</code></li><li><strong>Usage</strong>: top and left margin between node and grid.</li><li><strong>Note</strong>: x represents left margin, y represents top margin.</li></ul><h3 id="grid"><a class="header-anchor" href="#grid">#</a> grid</h3><ul><li><strong>Type</strong>: <code>Grid</code></li><li><strong>Usage</strong>: grid lines.</li><li><strong>Note</strong>: row represents horizontal grid line, column represents vertical grid line. &#39;a&#39; means to show all horizontal or vertical grid lines</li></ul><h3 id="defaultgridstroke"><a class="header-anchor" href="#defaultgridstroke">#</a> defaultGridStroke</h3><ul><li><strong>Type</strong>: <code>StrokeData</code>,</li><li><strong>Usage</strong>: default grid line stroke.</li></ul><h3 id="rects"><a class="header-anchor" href="#rects">#</a> rects</h3><ul><li><strong>Type</strong>: <code>RectArea[]</code>,</li><li><strong>Usage</strong>: rect area.</li></ul><h3 id="defaultrectstroke"><a class="header-anchor" href="#defaultrectstroke">#</a> defaultRectStroke</h3><ul><li><strong>Type</strong>: <code>StrokeData</code>,</li><li><strong>Usage</strong>: default rect border stroke.</li></ul><h3 id="texts"><a class="header-anchor" href="#texts">#</a> texts</h3><ul><li><strong>Type</strong>: <code>FlowTextType[]</code>,</li><li><strong>Usage</strong>: texts.</li></ul><h3 id="defaulttextfont"><a class="header-anchor" href="#defaulttextfont">#</a> defaultTextFont</h3><ul><li><strong>Type</strong>: <code>Object</code>,</li><li><strong>Usage</strong>: default text font.</li></ul><h3 id="dis"><a class="header-anchor" href="#dis">#</a> dis</h3><ul><li><strong>Type</strong>: <code>number</code>,</li><li><strong>Usage</strong>: distance between line break points and node.</li></ul><h3 id="render"><a class="header-anchor" href="#render">#</a> render</h3><ul><li><strong>Type</strong>: <code>(node: FlowNode) =&gt; React.ReactElement</code>,</li><li><strong>Usage</strong>: slot for grid.</li></ul>',38);var o={render:function(e,t){return l}}}}]);